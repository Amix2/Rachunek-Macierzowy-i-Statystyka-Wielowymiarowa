install.packages("ggplot2")
install.packages("Rcpp")
install.packages("Rcpp", dependencies = TRUE)
install.packages("Rcpp", dependencies = TRUE)
install.packages("Rcpp", dependencies = TRUE)
install.packages("Rcpp", dependencies = TRUE)
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)
read.csv("data.csv")
Data = read.csv("data.csv")
Data = read.csv("data.csv")
Data
Data = read.csv("data.csv")
Data
fit <- lm(popularity ~ duration_ms+danceability+energy+loudness+speechiness+acousticness+instrumentalness+liveness+valence+tempo, data = Data)
fit
class(fit)
is.list(fit)
names(fit)
summary(fit)
fit_small <- lm(popularity ~ duration_ms+loudness+instrumentalness, data = Data)
summary(fit_small)
fit_small <- lm(popularity ~ duration_ms+instrumentalness, data = Data)
summary(fit_small)
fit_small <- lm(popularity ~ duration_ms+loudness+instrumentalness, data = Data)
summary(fit_small)
fit_small_3 <- lm(popularity ~ duration_ms+loudness+instrumentalness, data = Data)
summary(fit_small_3)
fit_small_3 <- lm(popularity ~ duration_ms+loudness+acousticness+instrumentalness, data = Data)
summary(fit_small_3)
fit_small_3 <- lm(popularity ~ duration_ms+loudness+instrumentalness, data = Data)
summary(fit_small_3)
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)
library(ellipse)
plot(ellipse(fit_la, which = -1), type = "l")
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)
library(MASS)
install.packages("ISLR", dependencies = TRUE)
names(Boston)
dim(Boston)
?Boston
head(Boston)
fit_simple <- lm(Boston$medv ~ Boston$lstat)
fit_simple <- lm(medv ~ lstat, data = Boston)
attach(Boston)
fit_simple <- lm(medv ~ lstat)
fit_simple
class(fit_simple)
is.list(fit_simple)
names(fit_simple)
fit_simple
class(fit_simple)
is.list(fit_simple)
names(fit_simple)
fit_simple$coefficients
coef(fit_simple)
?summary.lm
summary(fit_simple)
summaryList <- summary(fit_simple)
summaryList$sigma
summaryList$r.squared
summaryList$fstatistic
confint(fit_simple)
predict(fit_simple, data.frame(lstat = c(5, 10, 15)), interval = "confidence")
predict(fit_simple, data.frame(lstat = c(5, 10, 15)), interval = "prediction")
plot(Boston$lstat, Boston$medv)
abline(fit_simple)
# Można poprzedzić instrukcją: par(mfrow = c(2, 2))
plot(fit_simple)
plot(predict(fit_simple), residuals(fit_simple))
plot(predict(fit_simple), rstudent(fit_simple))
library(ellipse)
plot(ellipse(fit_la, which = -1), type = "l")
fit_small_3 <- lm(popularity ~ duration_ms+loudness+instrumentalness, data = Data)
summary(fit_small_3)
coef(fit_small_3)
fit_small_3 <- lm(popularity ~ duration_ms+loudness+instrumentalness, data = Data)
summary(fit_small_3)
Data = read.csv("data.csv")
Data
fit <- lm(popularity ~ duration_ms+danceability+energy+loudness+speechiness+acousticness+instrumentalness+liveness+valence+tempo, data = Data)
fit_small_3 <- lm(popularity ~ duration_ms+loudness+instrumentalness, data = Data)
summary(fit_small_3)
fit <- lm(popularity ~ duration_ms+danceability+energy+loudness+speechiness+acousticness+instrumentalness+liveness+valence+tempo, data = Data)
summary(fit)
fit_small_2 <- lm(popularity ~ duration_ms+instrumentalness, data = Data)
summary(fit_small_2)
fit_small_2 <- lm(popularity ~ duration_ms+instrumentalness, data = Data)
summary(fit_small_2)
plot(Data$popularity, Data$instrumentalness )
abline(fit_small_2)
plot(Data$popularity, Data$duration_ms        )
abline(fit_small_2)
fit_small_2 <- lm(popularity ~ instrumentalness, data = Data)
summary(fit_small_2)
plot(Data$popularity, Data$instrumentalness        )
abline(fit_small_2)
fit_small_2 <- lm(popularity ~ duration_ms+instrumentalness, data = Data)
summary(fit_small_2)
plot(Data$popularity, Data$instrumentalness)
fit_small_2 <- lm(popularity ~ instrumentalness, data = Data)
summary(fit_small_2)
plot(Data$instrumentalness, Data$popularity)
abline(fit_simple)
fitQ <- lm(duration_ms~., data = Data)
summary(fitQ)
fitQ <- lm(year~popularity+duration_ms+danceability+energy+loudness+speechiness+acousticness+instrumentalness+liveness+valence+tempo, data = Data)
summary(fitQ)
fitQ <- lm(duration_ms~year+popularity+danceability+energy+loudness+speechiness+acousticness+instrumentalness+liveness+valence+tempo, data = Data)
summary(fitQ)
fitQ <- lm(danceability~duration_ms+year+popularity+energy+loudness+speechiness+acousticness+instrumentalness+liveness+valence+tempo, data = Data)
summary(fitQ)
fitQ <- lm(energy~danceability+duration_ms+year+popularity+loudness+speechiness+acousticness+instrumentalness+liveness+valence+tempo, data = Data)
summary(fitQ)
fitQ <- lm(valence~energy+danceability+duration_ms+year+popularity+loudness+speechiness+acousticness+instrumentalness+liveness+tempo, data = Data)
summary(fitQ)
fitQ <- lm(tempo~valence+energy+danceability+duration_ms+year+popularity+loudness+speechiness+acousticness+instrumentalness+liveness+tempo, data = Data)
summary(fitQ)
fitQ <- lm(tempo~valence+energy+danceability+duration_ms+year+popularity+loudness+speechiness+acousticness+instrumentalness+liveness, data = Data)
summary(fitQ)
fitQ <- lm(liveness~tempo+valence+energy+danceability+duration_ms+year+popularity+loudness+speechiness+acousticness+instrumentalness, data = Data)
summary(fitQ)
fitQ <- lm(instrumentalness~liveness+tempo+valence+energy+danceability+duration_ms+year+popularity+loudness+speechiness+acousticness, data = Data)
summary(fitQ)
fitQ <- lm(energy~instrumentalness+liveness+tempo+valence+danceability+duration_ms+year+popularity+loudness+speechiness+acousticness, data = Data)
summary(fitQ)
fit <- lm(energy~instrumentalness+liveness+tempo+valence+danceability+duration_ms+year+popularity+loudness+speechiness+acousticness, data = Data)
summary(fit)
plot(Data$year, Data$energy)
plot(Data$year, Data$instrumentalness)
plot(Data$year, Data$valence)
Data = read.csv("data.csv")
Data
fit <- lm(energy~instrumentalness+liveness+tempo+valence+danceability+duration_ms+year+popularity+loudness+speechiness+acousticness, data = Data)
summary(fit)
Data = read.csv("data.csv")
Data
fit <- lm(energy~instrumentalness+liveness+tempo+valence+danceability+duration_ms+year+popularity+loudness+speechiness+acousticness, data = Data)
summary(fit)
setwd("D:/AGH/Rachunek Macierzowy i Statystyka Wielowymiarowa/R")
View(Data)
View(Data)
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)
library(MASS)
library(ISLR)
library(class)
library(leaps)
Data = read.csv("data.csv")
Data <- na.omit(Data)
Data = Data[1:30,2:29]
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)
library(MASS)
library(ISLR)
library(class)
library(leaps)
Data = read.csv("data.csv")
Data <- na.omit(Data)
Data = Data[]
Data$explicit <- as.integer(Data$explicit == "True")
Data = read.csv("data.csv")
Data <- na.omit(Data)
Data = Data[1:30,2:15]
Data$explicit <- as.integer(Data$explicit == "True")
View(Data)
Data = read.csv("data.csv")
Data <- na.omit(Data)
Data = Data[1:30,3:15]
Data$explicit <- as.integer(Data$explicit == "True")
View(Data)
Data = read.csv("data.csv")
Data <- na.omit(Data)
Data = Data[1:30,3:16]
Data$explicit <- as.integer(Data$explicit == "True")
View(Data)
Data = read.csv("data.csv")
Data <- na.omit(Data)
Data = Data[1:30,3:17]
Data$explicit <- as.integer(Data$explicit == "True")
View(Data)
Data = read.csv("data.csv")
Data <- na.omit(Data)
Data = Data[1:30,3:18]
Data$explicit <- as.integer(Data$explicit == "True")
View(Data)
songs_bs <- regsubsets(loudness ~ ., data = Data, really.big = TRUE, nvmax=2)
songs_bs_sum <- summary(songs_bs)
songs_bs_sum
Data = read.csv("data.csv")
Data <- na.omit(Data)
Data = Data[,3:17]
Data$explicit <- as.integer(Data$explicit == "True")
songs_bs <- regsubsets(loudness ~ ., data = Data, really.big = TRUE, nvmax=2)
songs_bs_sum <- summary(songs_bs)
songs_bs_sum
songs_bs <- regsubsets(loudness ~ ., data = Data, really.big = TRUE, nvmax=3)
songs_bs_sum <- summary(songs_bs)
songs_bs_sum
songs_bs <- regsubsets(loudness ~ ., data = Data, really.big = TRUE, nvmax=4)
songs_bs_sum <- summary(songs_bs)
songs_bs_sum
songs_bs <- regsubsets(loudness ~ ., data = Data, really.big = TRUE, nvmax=5)
songs_bs_sum <- summary(songs_bs)
songs_bs_sum
songs_bs <- regsubsets(loudness ~ ., data = Data, really.big = TRUE, nvmax=6)
songs_bs_sum <- summary(songs_bs)
songs_bs_sum
songs_bs <- regsubsets(loudness ~ ., data = Data, really.big = TRUE, nvmax=8)
songs_bs_sum <- summary(songs_bs)
songs_bs_sum
songs_bs <- regsubsets(loudness ~ ., data = Data, really.big = TRUE)
songs_bs_sum <- summary(songs_bs)
songs_bs_sum
songs_bs <- regsubsets(loudness ~ ., data = Data, really.big = TRUE, nvmax=15)
songs_bs_sum <- summary(songs_bs)
songs_bs_sum
