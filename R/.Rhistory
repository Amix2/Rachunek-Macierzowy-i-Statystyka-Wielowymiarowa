setwd("D:/AGH/Rachunek-Macierzowy-i-Statystyka-Wielowymiarowa/R")
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)
library(MASS)
library(ISLR)
library(class)
Data = read.csv("data.csv")
Data$explicit <- as.integer(Data$explicit == "True")
fit <- glm(explicit~energy+instrumentalness+liveness+tempo+valence+danceability+duration_ms+year+popularity+loudness+speechiness+acousticness, family = binomial, data = Data)
summary(fit)
probs = predict(fit, type = "response")
head(probs)
Data = read.csv("data.csv")
Data$explicit <- as.integer(Data$explicit == "True")
fit <- glm(explicit~energy+instrumentalness+liveness+tempo+valence+danceability+duration_ms+year+popularity+loudness+speechiness+acousticness, family = binomial, data = Data)
summary(fit)
probs = predict(fit, type = "response")
head(probs)
predicted <- ifelse(probs > 0.5, "1", "0")
cm <- table(predicted, Data$explicit)
cm
(cm[1, 2] + cm[2, 1]) / sum(cm)
mean(predicted != Data$explicit)
predicted <- ifelse(probs > 0.5, "1", "0")
cm <- table(predicted, Data$explicit)
cm
predicted <- ifelse(probs > 0.5, "1", "0")
cm <- table(predicted, Data$explicit)
cm
(cm[1, 2] + cm[2, 1]) / sum(cm)
mean(predicted != Data$explicit)
train <- Data$year < 2004
Data_test <- Data[!train,]
Explicit_test <- Data$explicit[!train]
fit <- glm(explicit~energy+instrumentalness+liveness+tempo+valence+danceability+duration_ms+year+popularity+loudness+speechiness+acousticness, family = binomial, data = Data, subset = train)
summary(fit)
probs <- predict(fit, Data_test, type = "response")
predicted <- ifelse(probs > 0.5, "1", "0")
table(predicted, Explicit_test)
dir_log_best2 <- list()
dir_log_best2$fit <- glm(explicit~energy+instrumentalness+tempo+valence+danceability+duration_ms+year+acousticness, family = binomial, data = Data, subset = train)
summary(dir_log_best2$fit)
dir_log_best2$probs <- predict(dir_log_best2$fit, Data_test, type = "response")
dir_log_best2$predicted <- ifelse(dir_log_best2$probs > 0.5, "1", "0")
table(dir_log_best2$predicted, Explicit_test)
dir_log_best2$cm <-table(dir_log_best2$predicted, Explicit_test)
(dir_log_best2$cm[1, 2] + dir_log_best2$cm[2, 1]) / sum(dir_log_best2$cm)
mean(dir_log_best2$predicted != Explicit_test)
dir_lda <- list()
dir_lda$fit <- lda(explicit~energy+instrumentalness+tempo+valence+danceability+duration_ms+year+acousticness, data = Data, subset = train)
dir_lda$fit
dir_lda$predicted <- predict(dir_lda$fit, Data_test)
table(dir_lda$predicted$class, Explicit_test)
dir_lda$cm <-table(dir_lda$predicted$class, Explicit_test)
(dir_lda$cm[1, 2] + dir_lda$cm[2, 1]) / sum(dir_lda$cm)
mean(dir_lda$predicted$class != Explicit_test)
dir_qda <- list()
dir_qda$fit <- qda(explicit~energy+instrumentalness+tempo+valence+danceability+duration_ms+year+acousticness, data = Data, subset = train)
dir_qda$fit
dir_qda <- list()
dir_qda$fit <- qda(explicit~energy+instrumentalness+tempo+valence+danceability+duration_ms+year+acousticness, data = Data, subset = train)
dir_qda$fit
dir_qda$predicted <- predict(dir_qda$fit, Data_test)
table(dir_qda$predicted$class, Explicit_test)
dir_qda$cm <-table(dir_qda$predicted$class, Explicit_test)
(dir_qda$cm[1, 2] + dir_qda$cm[2, 1]) / sum(dir_qda$cm)
mean(dir_qda$predicted$class != Explicit_test)
train_set <- Data[train, c("energy", "instrumentalness", "tempo", "valence", "danceability", "year", "acousticness")]
test_set <- Data[!train, c("energy", "instrumentalness", "tempo", "valence", "danceability", "year", "acousticness")]
explicit_train <- Data$explicit[train]
Explicit_test <- Data$explicit[!train]
dir_knn_1 <- knn(train_set, test_set, explicit_train, k = 1)
table(dir_knn_1, Explicit_test)
mean(dir_knn_1 != Explicit_test)
train_set <- Data[train, c("energy", "instrumentalness", "tempo", "valence", "danceability", "year", "acousticness")]
test_set <- Data[!train, c("energy", "instrumentalness", "tempo", "valence", "danceability", "year", "acousticness")]
explicit_train <- Data$explicit[train]
Explicit_test <- Data$explicit[!train]
dir_knn_3 <- knn(train_set, test_set, explicit_train, k = 3)
table(dir_knn_3, Explicit_test)
mean(dir_knn_3 != Explicit_test)
train_set <- Data[train, c("energy", "instrumentalness", "tempo", "valence", "danceability", "year", "acousticness")]
test_set <- Data[!train, c("energy", "instrumentalness", "tempo", "valence", "danceability", "year", "acousticness")]
explicit_train <- Data$explicit[train]
Explicit_test <- Data$explicit[!train]
dir_knn_6 <- knn(train_set, test_set, explicit_train, k = 6)
table(dir_knn_6, Explicit_test)
mean(dir_knn_6 != Explicit_test)
train_set <- Data[train, c("energy", "instrumentalness", "tempo", "valence", "danceability", "year", "acousticness")]
test_set <- Data[!train, c("energy", "instrumentalness", "tempo", "valence", "danceability", "year", "acousticness")]
explicit_train <- Data$explicit[train]
Explicit_test <- Data$explicit[!train]
dir_knn_16 <- knn(train_set, test_set, explicit_train, k = 16)
table(dir_knn_16, Explicit_test)
mean(dir_knn_16 != Explicit_test)
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)
library(MASS)
library(ISLR)
library(class)
library(leaps)
Data = read.csv("data.csv")
Data <- na.omit(Data)
Data = Data[,3:17]
Data$explicit <- as.integer(Data$explicit == "True")
songs_bs <- regsubsets(loudness ~ ., data = Data, really.big = TRUE, nvmax=15)
songs_bs_sum <- summary(songs_bs)
songs_bs_sum
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)
library(MASS)
library(ISLR)
library(class)
library(leaps)
Data = read.csv("data.csv")
Data <- na.omit(Data)
Data = Data[,3:17]
Data$explicit <- as.integer(Data$explicit == "True")
songs_bs <- regsubsets(loudness ~ ., data = Data, really.big = TRUE, nvmax=15)
songs_bs_sum <- summary(songs_bs)
songs_bs_sum
songs_bs_sum$cp
songs_bs_sum$cp
bic_min <- which.min(songs_bs_sum$bic)
bic_min
songs_bs_sum$bic[bic_min]
songs_bs_sum$cp
songs_bs_sum$bic
bic_min <- which.min(songs_bs_sum$bic)
bic_min
songs_bs_sum$bic[bic_min]
plot(songs_bs_sum$bic, xlab = "Liczba zmiennych", ylab = "BIC", col = "green",
type = "b", pch = 20)
points(bic_min, songs_bs_sum$bic[bic_min], col = "red", pch = 9)
plot(songs_bs, scale = "bic")
songs_fwd <- regsubsets(loudness ~ ., data = Data, really.big = TRUE, nvmax=15,
method = "forward")
songs_fwd_sum <- summary(songs_fwd)
songs_fwd_sum
songs_back <- regsubsets(loudness ~ ., data = Data, really.big = TRUE, nvmax=15,
method = "backward")
songs_back_sum <- summary(songs_back)
songs_back_sum
plot(songs_fwd, scale = "bic")
plot(songs_back, scale = "bic")
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)
library(ISLR)
library(glmnet)
Data = read.csv("data.csv")
Data = Data[,3:17]
Data <- na.omit(Data)
X <- model.matrix(Data$popularity ~ ., data=Data)[, -1]
y <- Data$popularity
set.seed(2)
n <- nrow(X)
train <- sample(n, n / 2)
test <- -train
fit_lasso <- glmnet(X[train,], y[train], alpha = 1)
plot(fit_lasso, xvar = "lambda")
cv_out <- cv.glmnet(X[train,], y[train], alpha = 1)
plot(cv_out)
cv_out$lambda.min
pred_lasso <- predict(fit_lasso, s = cv_out$lambda.min, newx = X[test,])
mean((pred_lasso - y[test])^2)
predict(fit_lasso, s = cv_out$lambda.min, newx = X[test,], type = "coefficients")
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)
library(ISLR)
library(MASS)
library(tree)
library(randomForest)
library(gbm)
Data = read.csv("data.csv")
Data <- na.omit(Data)
Data = Data[,3:17]
Data$explicit <- as.integer(Data$explicit == "True")
IsPopular <- factor(ifelse(Data$popularity > 80, "Yes", "No"))
DataPolularH <- data.frame(Data, IsPopular)
is_popular_tree <- tree(IsPopular ~ . - popularity, data = DataPolularH)
summary(is_popular_tree)
plot(is_popular_tree)
text(is_popular_tree, pretty = 0)
is_popular_tree
set.seed(1)
n <- nrow(DataPolularH)
train <- sample(n, n / 2)
test <- -train
is_popular_tree <- tree(IsPopular ~ . - popularity, data = DataPolularH)
tree_class <- predict(is_popular_tree, newdata = DataPolularH[test,], type = "class")
table(tree_class, DataPolularH$IsPopular[test])
mean(tree_class != DataPolularH$IsPopular[test])
plot(is_popular_tree)
text(is_popular_tree, pretty = 0)
plot(is_popular_tree)
text(is_popular_tree, pretty = 0)
set.seed(1)
is_pop_cv <- cv.tree(is_popular_tree, FUN = prune.misclass)
is_pop_cv
plot(is_pop_cv$size, is_popular_tree$dev, type = "b")
size_opt <- is_pop_cv$size[which.min(is_pop_cv$dev)-1]
is_pop_pruned <- prune.misclass(is_popular_tree, best = size_opt)
plot(is_pop_pruned)
text(is_pop_pruned, pretty = 0)
medv_boost <- gbm(IsPopular ~ . - popularity, data = DataPolularH, distribution = "gaussian",
n.trees = 5000, interaction.depth = 4)
medv_boost
size_opt <- is_pop_cv$size[which.min(is_pop_cv$dev)-1]
is_pop_pruned <- prune.misclass(is_popular_tree, best = size_opt)
plot(is_pop_pruned)
text(is_pop_pruned, pretty = 0)
Data = read.csv("data.csv")
fit <- lm(energy~instrumentalness+liveness+tempo+valence+danceability+duration_ms+year+popularity+loudness+speechiness+acousticness, data = Data)
summary(fit)
summary(medv_boost)
plot(medv_boost, i.var = "year")
plot(medv_boost, i.var = "energy")
plot(medv_boost, i.var = c("year", "energy"))
plot(medv_boost, i.var = "year")
plot(medv_boost, i.var = "acounsticness")
plot(medv_boost, i.var = "year")
plot(medv_boost, i.var = "acousticness")
plot(medv_boost, i.var = c("year", "energy"))
